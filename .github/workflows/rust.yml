name: Rust

on:
    workflow_dispatch:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest, windows-latest, macos-latest ]

        steps:
            - name: Cache
              uses: actions/cache@v2.1.0
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Install SDL2
              run: sudo apt-get update && sudo apt-get install libsdl2-dev
              if: ${{ runner.os == 'Linux' }}

            - uses: actions/checkout@v2

            - name: Install latest nightly
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly
                  override: true

            - name: Install cargo-make
              uses: actions-rs/cargo@v1
              with:
                  command: install
                  args: --debug cargo-make

            - name: Run CI
              uses: actions-rs/cargo@v1
              with:
                  command: make
                  args: ci-flow --profile production

            - name: Upload production binary Linux
              uses: actions/upload-artifact@v2
              with:
                  name: rusty-release-linux
                  path: |
                      target/release/rusty-chip-8-emu
                      target/release/config.yml
                      target/release/roms/
              if: ${{ runner.os == 'Linux' }}

            - name: Upload production binary Windows
              uses: actions/upload-artifact@v2
              with:
                  name: rusty-release-windows
                  path: |
                      target/release/rusty-chip-8-emu.exe
                      target/release/rusty-chip-8-emu.pdb
                      target/release/config.yml
                      target/release/roms/
              if: ${{ runner.os == 'Windows' }}

            - name: Upload production binary MacOS
              uses: actions/upload-artifact@v2
              with:
                  name: rusty-release-macos
                  path: |
                    target/release/rusty-chip-8-emu
                    target/release/config.yml
                    target/release/roms/
              if: ${{ runner.os == 'macOS' }}
